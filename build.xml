<?xml version="1.0" encoding="UTF-8"?>
<!-- ====================================================================== 
     2012/01/26 16:31:05                                                        

     ScienceDesign GUI    
     GUI library
                   
     Higuchi Ryusuke                                                                
     ====================================================================== -->
<project name="scid-gui" default="compile" xmlns:ivy="antlib:org.apache.ivy.ant">
    <description>
            SciendeDesign GUI library
    </description>

    <property name="module.version.target" value="0.3.1" />
    <property file="project/build.properties"/>

    <!-- - - - - - - - - - - - - - - - - - 
          target: init                      
         - - - - - - - - - - - - - - - - - -->
    <target name="init">
    </target>

    <!-- ================================= 
          target: clean              
         ================================= -->
    <target name="clean" description="clean the project">
        <delete includeemptydirs="true" dir="${build.dir}"/>
    </target>

    <target name="clean-lib" description="clean lib dir">
        <delete dir="${lib.dir}"/>
    </target>
    
    <!-- ================================= 
          target: Resolve dependency              
         ================================= -->
    <target name="retrieve" description="retrieve dependencies with ivy">
        <ivy:retrieve symlink="true" />
    </target>

    <!-- ================================= 
          target: compile              
         ================================= -->
    <target name="compile" depends="init" description="compile the project">
        <mkdir dir="${classes.main.dir}"/>

        <path id="lib.compile.classpath">
            <fileset dir="${lib.dir}" includes="**/*.jar" />
        </path>
        
        <javac destdir="${classes.main.dir}" source="${source}" target="${target}"
                encoding="UTF-8" debug="true" includeantruntime="false">
            <compilerarg value="-Xlint:all"/>
            <src path="${src.main.java.dir}" />
            <classpath refid="lib.compile.classpath" />
        </javac>
    </target>

    <!-- ================================= 
          target: create jar file              
         ================================= -->
    <target name="package" depends="version, compile" description="make a jar file for this project">
        <jar destfile="${package.file}">
            <fileset dir="${classes.main.dir}" />
            <manifest>
                <attribute name="Built-By" value="${user.name}" />
                <attribute name="Build-Version" value="${version}" />
            </manifest>
        </jar>
    </target>

    <!-- ================================= 
          target: package-sources
         ================================= -->
    <target name="jar-sources" depends="init" description="description">
        <zip destfile="${source.file}">
            <fileset dir="${src.main.java.dir}" includes="**/*.java" />
        </zip>
    </target>

    <!-- ================================= 
          target: create Javadoc              
         ================================= -->
    <target name="javadoc" depends="init" description="Create Javadoc">
        <path id="lib.compile.classpath">
            <fileset dir="${lib.dir}" includes="**/*.jar" />
        </path>
            
        <javadoc destdir="${javadoc.dir}" encoding="UTF-8" source="1.6" author="true" version="true"
                access="${javadoc.access}" docencoding="UTF-8" charset="UTF-8" doctitle="${javadoc.title}">
            <arg value="-J-Dfile.encoding=UTF-8"/>
            <classpath refid="lib.compile.classpath" />
            <sourcepath path="${src.main.java.dir}"/>
            <link href="${javadoc.api-ref.javase}"/>
        </javadoc>
    </target>
    
    <!-- ================================= 
          target: package-javadoc
         ================================= -->
    <target name="jar-javadoc" depends="javadoc" description="description">
        <jar basedir="${javadoc.dir}" destfile="${javadoc.file}"/>
    </target>
    
    <target name="dist" depends="">
        <property name="version" value="${module.version.target}" />
        <ivy:info/>
        <ivy:deliver delivertarget="default" pubrevision="${version}"/>
        <copy file="${package.file}" tofile="${ivy.distrib.dir}/jars/${ant.project.name}-${version}.jar" />
        <copy file="${source.file}" tofile="${ivy.distrib.dir}/sources/${ant.project.name}-sources-${version}.jar" />
        <copy file="${javadoc.file}" tofile="${ivy.distrib.dir}/javadocs/${ant.project.name}-javadocs-${version}.jar" />
    </target>
    
    <!-- ================================= 
           target: publish-local
          ================================= -->
    <target name="publish-local" depends="local-version, dist"
            description="publish this project in the local ivy repository">
        <ivy:publish
            resolver="local"
            pubrevision="${version}"
            pubdate="${now}"
            status="integration"
            forcedeliver="true">
        </ivy:publish>
        <echo message="project ${ant.project.name} published locally with version ${version}" />
    </target>

    <!-- ================================= 
      target: clean-local              
     ================================= -->
    <target name="clean-local" description="cleans the local repository for the current module">
        <ivy:info file="${ivy.file}" />
        <delete dir="${ivy.local.default.root}/${ivy.organisation}/${ivy.module}" />
    </target>

    <!-- ================================= 
          target: publish              
         ================================= -->
    <target name="publish" depends="version, dist" description="publish this project in the ivy repository">
        <ivy:publish
            resolver="shared"
            pubrevision="${version}"
            status="release" />
        <echo message="project ${ant.project.name} released with version ${version}" />
    </target>

    <target name="local-version">
        <tstamp>
            <format property="now" pattern="yyyyMMddHHmmss" />
        </tstamp>
        <property name="version" value="${module.version.target}-local-${now}" />
    </target>

    <target name="version">
        <property name="version" value="${module.version.target}" />
    </target>
    
    <!-- ================================= 
          target: build              
         ================================= -->
    <target name="build" depends="package, jar-javadoc, jar-sources" description="build artifacts">
        
    </target>

</project>

